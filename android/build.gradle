buildscript {
	repositories {
		mavenCentral()
		maven { url "https://jitpack.io" }
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:2.1.0'
		classpath 'com.github.alxndrsn:android-check:1f87548c0686d823e5f1490a2053b70bd9f5022e'
		classpath 'com.trickyandroid:jacoco-everywhere:0.2.1'
	}
}

apply plugin: 'android'
apply plugin: 'com.noveogroup.android.check'
apply plugin: 'jacoco-everywhere'

// enable verbose lint warnings
gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << '-Xlint:deprecation'
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

def isReleaseBuild = {
	return System.env.JENKINS == 'true' || (System.env.TRAVIS == 'true' &&
			System.env.TRAVIS_BRANCH == 'master')
}
def getVersionCode = {
	if(isReleaseBuild()) {
		def code = System.env.TRAVIS == 'true' ?
			System.env.TRAVIS_BUILD_NUMBER :
			System.env.VERSION_TO_BUILD.split(/\./)[-1]
		return Integer.parseInt(code)
	}
	return 1
}
def getVersionName = {
	if(isReleaseBuild()) {
		if(System.env.TRAVIS == 'true') {
			def v = System.env.COLLECT_VERSION_NAME
			if(!v) throw new GradleException(
					'Missing required env var: COLLECT_VERSION_NAME')
			return v
		} else return System.env.VERSION_TO_BUILD
	}
	return 'SNAPSHOT'
}

android {
	compileSdkVersion 23
	buildToolsVersion '23.0.3'
	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/NOTICE'
	}

	defaultConfig {
		versionCode getVersionCode()
		versionName getVersionName()
		archivesBaseName = "${project.name}-${versionName}"
	}

	applicationVariants.all {
		buildConfigField "String", "EXAMPLE_ENV_VAR", "\"${System.env.EXAMPLE}\"";
	}

	signingConfigs {
		release {
			storeFile file(System.env.ANDROID_KEYSTORE_PATH ?: signingConfigs.debug.storeFile)
			storePassword System.env.ANDROID_KEYSTORE_PASSWORD ?: signingConfigs.debug.storePassword
			keyAlias System.env.ANDROID_KEY_ALIAS ?: signingConfigs.debug.keyAlias
			keyPassword System.env.ANDROID_KEY_PASSWORD ?: signingConfigs.debug.keyPassword
		}
	}

	buildTypes {
		release {
			minifyEnabled true
			proguardFile getDefaultProguardFile('proguard-android.txt')
			signingConfig signingConfigs.release
		}
	}

	check {
		abortOnError true
	}

	lintOptions {
		warningsAsErrors true

		disable 'IconMissingDensityFolder' // re-enable this if proper icons are added to the project

		if(System.env.TRAVIS == 'true') {
			abortOnError true
			htmlReport false
			xmlReport false
			textReport true
			textOutput 'stdout'
		}
	}
}
